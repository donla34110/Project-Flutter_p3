import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: const SearchScreen(),
    );
  }
}

class SearchScreen extends StatefulWidget {
  const SearchScreen({super.key});

  @override
  _SearchScreenState createState() => _SearchScreenState();
}

class _SearchScreenState extends State<SearchScreen> {
  // รายการสินค้าทั้งหมด
  final List<Map<String, dynamic>> _products = [
    {
      'name': 'Nike Shoes',
      'price': 100,
      'image':
          'https://images.unsplash.com/photo-1512290923902-8a9f81dc236c?fit=crop&w=500&h=500&q=80'
    },
    {
      'name': 'Adidas Sneakers',
      'price': 120,
      'image':
          'https://images.unsplash.com/photo-1600185365318-54b29ea1e7e0?fit=crop&w=500&h=500&q=80'
    },
    {
      'name': 'Puma Running Shoes',
      'price': 90,
      'image':
          'https://images.unsplash.com/photo-1571731956672-1d4ac7d51c0e?fit=crop&w=500&h=500&q=80'
    },
  ];

  // รายการสินค้าที่จะถูกกรอง
  List<Map<String, dynamic>> _filteredProducts = [];

  // ตัวควบคุมกล่องค้นหา
  final TextEditingController _searchController = TextEditingController();

  @override
  void initState() {
    super.initState();
    _filteredProducts = _products; // เริ่มต้นด้วยการแสดงสินค้าทั้งหมด
  }

  void _filterProducts(String query) {
    if (query.isEmpty) {
      setState(() {
        _filteredProducts = _products; // แสดงสินค้าทั้งหมดหากไม่มีการค้นหา
      });
    } else {
      setState(() {
        _filteredProducts = _products
            .where((product) =>
                product['name'].toLowerCase().contains(query.toLowerCase()))
            .toList();
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Search'),
        backgroundColor: Colors.purple,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _searchController,
              decoration: InputDecoration(
                hintText: 'Search products...',
                filled: true,
                fillColor: Colors.grey[200],
                prefixIcon: const Icon(Icons.search),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(30),
                  borderSide: BorderSide.none,
                ),
              ),
              onChanged: _filterProducts, // เรียกใช้ฟังก์ชันเมื่อมีการเปลี่ยนแปลงข้อความ
            ),
            const SizedBox(height: 20),
            Expanded(
              child: _filteredProducts.isEmpty
                  ? const Center(
                      child: Text('No products found'),
                    )
                  : ListView.builder(
                      itemCount: _filteredProducts.length,
                      itemBuilder: (context, index) {
                        final product = _filteredProducts[index];
                        return Column(
                          children: [
                            ListTile(
                              leading: Image.network(
                                product['image'],
                                width: 60,
                                height: 60,
                                fit: BoxFit.cover,
                              ),
                              title: Text(product['name']),
                              subtitle: Text('\$${product['price']}'),
                              trailing: const Icon(
                                Icons.local_offer,
                                color: Colors.purple,
                              ),
                            ),
                            const Divider(),
                          ],
                        );
                      },
                    ),
            ),
          ],
        ),
      ),
    );
  }
}
