import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: const CartScreen(),
    );
  }
}

class CartScreen extends StatefulWidget {
  const CartScreen({super.key});

  @override
  _CartScreenState createState() => _CartScreenState();
}

class _CartScreenState extends State<CartScreen> {
  int quantity1 = 1;
  int quantity2 = 1;
  int quantity3 = 1;

  int getTotal() {
    return (quantity1 * 35) + (quantity2 * 35) + (quantity3 * 35);
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Cart'),
        backgroundColor: Colors.redAccent,
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView(
              padding: const EdgeInsets.all(16),
              children: [
                _buildCartItem('Spacy fresh crab', 35, quantity1, () {
                  setState(() {
                    if (quantity1 > 1) quantity1--;
                  });
                }, () {
                  setState(() {
                    quantity1++;
                  });
                }),
                const Divider(),
                _buildCartItem('Spacy fresh crab', 35, quantity2, () {
                  setState(() {
                    if (quantity2 > 1) quantity2--;
                  });
                }, () {
                  setState(() {
                    quantity2++;
                  });
                }),
                const Divider(),
                _buildCartItem('Spacy fresh crab', 35, quantity3, () {
                  setState(() {
                    if (quantity3 > 1) quantity3--;
                  });
                }, () {
                  setState(() {
                    quantity3++;
                  });
                }),
              ],
            ),
          ),
          _buildTotalSection(),
          _buildPlaceOrderButton(),
        ],
      ),
      bottomNavigationBar: BottomNavigationBar(
        selectedItemColor: Colors.redAccent,
        unselectedItemColor: Colors.grey,
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.shopping_cart),
            label: 'Cart',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: 'Profile',
          ),
        ],
      ),
    );
  }

  Widget _buildCartItem(String name, int price, int quantity,
      VoidCallback onDecrease, VoidCallback onIncrease) {
    return Row(
      children: [
        Image.network(
          'https://via.placeholder.com/80',
          width: 60,
          height: 60,
        ),
        const SizedBox(width: 10),
        Expanded(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(name, style: const TextStyle(fontSize: 18)),
              const Text('Waterrich kika', style: TextStyle(color: Colors.grey)),
              const SizedBox(height: 5),
              Text('\$$price',
                  style: const TextStyle(
                      fontSize: 16, fontWeight: FontWeight.bold)),
            ],
          ),
        ),
        Row(
          children: [
            IconButton(
              onPressed: onDecrease,
              icon: const Icon(Icons.remove_circle_outline),
            ),
            Text('$quantity'),
            IconButton(
              onPressed: onIncrease,
              icon: const Icon(Icons.add_circle_outline),
            ),
          ],
        ),
      ],
    );
  }

  Widget _buildTotalSection() {
    int subtotal = getTotal();
    int deliveryCharge = 10;
    int discount = 20;
    int total = subtotal + deliveryCharge - discount;

    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Container(
        padding: const EdgeInsets.all(16),
        decoration: BoxDecoration(
          color: Colors.red.shade100,
          borderRadius: BorderRadius.circular(10),
        ),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            _buildTotalRow('Sub-Total', '\$$subtotal'),
            _buildTotalRow('Delivery Charge', '\$$deliveryCharge'),
            _buildTotalRow('Discount', '\$$discount'),
            const Divider(),
            _buildTotalRow('Total', '\$$total', isBold: true),
          ],
        ),
      ),
    );
  }

  Widget _buildTotalRow(String label, String value, {bool isBold = false}) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4.0),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(label, style: TextStyle(fontWeight: isBold ? FontWeight.bold : FontWeight.normal)),
          Text(value, style: TextStyle(fontWeight: isBold ? FontWeight.bold : FontWeight.normal)),
        ],
      ),
    );
  }

  Widget _buildPlaceOrderButton() {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: ElevatedButton(
        onPressed: () {
          ScaffoldMessenger.of(context).showSnackBar(
            const SnackBar(content: Text('Order placed!')),
          );
        },
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.redAccent,
          padding: const EdgeInsets.symmetric(vertical: 16),
        ),
        child: const Text('Place My Order', style: TextStyle(fontSize: 18)),
      ),
    );
  }
}
